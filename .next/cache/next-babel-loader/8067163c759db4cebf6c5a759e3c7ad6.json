{"ast":null,"code":"import _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _initializerDefineProperty from \"@babel/runtime-corejs2/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime-corejs2/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime-corejs2/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { action, computed, observable } from \"mobx\";\nexport let TodoList = (_dec = observable.shallow, (_class = (_temp = class TodoList {\n  constructor() {\n    _initializerDefineProperty(this, \"list\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"addTodo\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"removeTodo\", _descriptor3, this);\n  }\n\n  get getTodos() {\n    return this.list;\n  } // @computed get openTodos() {\n  //     return this.list.filter(todo => !todo.isDone);\n  // }\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"list\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return obj => {\n      this.list.push(obj);\n    };\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"removeTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return todo => {\n      this.list.splice(this.list.indexOf(todo), 1);\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getTodos\", [computed], _Object$getOwnPropertyDescriptor(_class.prototype, \"getTodos\"), _class.prototype)), _class));","map":{"version":3,"sources":["/home/suhail/Downloads/mock-next/stores/todolist.js"],"names":["action","computed","observable","TodoList","shallow","getTodos","list","obj","push","todo","splice","indexOf"],"mappings":";;;;;;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA2C,MAA3C;AAGA,WAAaC,QAAb,WACKD,UAAU,CAACE,OADhB,qBAAO,MAAMD,QAAN,CAAe;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAelB,MAAcE,QAAd,GAAyB;AACrB,WAAO,KAAKC,IAAZ;AACH,GAjBiB,CAmBlB;AACA;AACA;;;AArBkB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,WAC+B,EAD/B;AAAA;AAAA,2EAOKN,MAPL;AAAA;AAAA;AAAA;AAAA;AAAA,WAOuBO,GAAD,IAAS;AACvB,WAAKD,IAAL,CAAUE,IAAV,CAAeD,GAAf;AACH,KATL;AAAA;AAAA,8EAWKP,MAXL;AAAA;AAAA;AAAA;AAAA;AAAA,WAW0BS,IAAD,IAAU;AAC3B,WAAKH,IAAL,CAAUI,MAAV,CAAiB,KAAKJ,IAAL,CAAUK,OAAV,CAAkBF,IAAlB,CAAjB,EAA0C,CAA1C;AACH,KAbL;AAAA;AAAA,6DAeKR,QAfL","sourcesContent":["import {action, computed, observable} from \"mobx\";\n\n\nexport class TodoList {\n    @observable.shallow list = [];\n\n    // constructor(todos) {\n    //     todos.forEach(this.addTodo);\n    // }\n\n    @action addTodo = (obj) => {\n        this.list.push(obj);\n    }\n\n    @action removeTodo = (todo) => {\n        this.list.splice(this.list.indexOf(todo), 1);\n    };\n\n    @computed get getTodos() {\n        return this.list;\n    }\n\n    // @computed get openTodos() {\n    //     return this.list.filter(todo => !todo.isDone);\n    // }\n}"]},"metadata":{},"sourceType":"module"}